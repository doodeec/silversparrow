android {
    signingConfigs {
        release {
            // passwords and alias are obtained via askForPasswords task
            storeFile file("../${project.property('keystore.file')}")
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-debug"
        }

        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true
//            minifyEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task askForPasswords << {
    def storePass
    def keyAlias
    def keyPass

    def keystorePropertiesFile = new File(project.property("keystore.properties"))

    if (project.hasProperty("keystore.properties") && keystorePropertiesFile.exists()) {
        println "Loading keystore passwords from property file..."
        Properties properties = new Properties()
        properties.load(new FileInputStream(keystorePropertiesFile))
        storePass = properties['keystore.store.password']
        keyAlias = properties['keystore.key.alias']
        keyPass = properties['keystore.key.password']
    } else {
        println "Getting keystore passwords from user input..."
        storePass = new String(System.console().readPassword("\nStore password: "))
        keyAlias = new String(System.console().readLine("Key alias: "))
        keyPass = new String(System.console().readPassword("Key password: "))
    }

    android.signingConfigs.release.storePassword = storePass
    android.signingConfigs.release.keyAlias = keyAlias
    android.signingConfigs.release.keyPassword = keyPass
}

tasks.whenTaskAdded {
    theTask ->
        if (theTask.name.equals("packageRelease")) {
            theTask.dependsOn "askForPasswords"
        }
}